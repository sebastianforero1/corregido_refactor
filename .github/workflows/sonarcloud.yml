name: CI - SonarCloud (Python)

on:
  push:
    branches: [main]         # Corre en cualquier rama
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [main]
  workflow_dispatch:         # Bot√≥n ‚ÄúRun workflow‚Äù

jobs:
  build-and-analizar:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # üëá Aseguramos ejecuci√≥n de tests y creaci√≥n del coverage.xml en la RA√çZ
      - name: Ejecutar pruebas con cobertura (XML)
        run: |
          pytest -q --disable-warnings --maxfail=1 \
            --cov=src --cov-branch \
            --cov-report=xml:coverage.xml
          test -f coverage.xml && echo "coverage.xml OK" || (echo "NO coverage.xml" && exit 1)

      # üëá Inspecciones √∫tiles en logs (borralas luego si quieres)
      - name: Mostrar √°rbol y primeras l√≠neas del reporte
        run: |
          ls -lah
          python - << 'PY'
import xml.etree.ElementTree as ET
root = ET.parse('coverage.xml').getroot()
print("== cobertura: root tag:", root.tag)
print("== muestras de rutas:")
for pkg in root.findall(".//packages/package"):
    for cls in pkg.findall("classes/class"):
        print("file:", cls.attrib.get("filename"))
        break
    break
PY

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2.2.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=sonar-project.properties
            -Dsonar.organization=sebastianforero1
            -Dsonar.python.version=3.11
            -Dsonar.sources=src
            -Dsonar.tests=tests
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.exclusions=**/__pycache__/**,**/*.pyc
